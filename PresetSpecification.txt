NOTICE: This file is primarily for developers and people who want to be able to read Soundbench's presets with a hex editor.

All of Soundbench's presets are located in Soundbench's application data folder, whose location varies per system.
Windows:                    ~/AppData/Soundbench
Macintosh OS:               ~/Library/Soundbench
Linux and other *NIXes:     ~/.soundbench

~~~~~~~~~~~~~~~~~

Byte Arrays set the first bit of each byte to 1 if there is a following element and 0 if there isn't.
The remaining 7 bits are used for the actual data.

These are generally used as strings of ASCII characters.

~~~~~~~~~~~~~~~~~

Type fields:
A type field is a 1-byte field that indicates the amount and type of data after it.

0x0: A positive byte.
0x1: A signed byte.
0x2: A positive 2-byte integer.
0x3: A signed 2-byte integer.
0x4: A byte array.
0x5: A single-precision floating point number.
0x6: A floating point sample (like 0x5, except capped -1.0 to 1.0).

~~~~~~~~~~~~~~~~~

General format:
SoundbenchPreset <preset_version> <name> <artist> <description> <channels> <chan_arguments>

preset_version: A two-byte long integer storing the version of the preset to allow Soundbench to recognize older files.
name: A byte array storing the preset's name (ASCII-encoded).
artist: A byte array sorting the artist's name (ASCII-encoded).
description: A byte array sorting a short description of the preset (ASCII-encoded).
channels: A multi-element field that indicates which generators and effects to load.
chan_arguments: An array of records that store arguments to the generators and channels to set their individual settings.

~~~~~~~~~~~~~~~~~

Channels section:

Format:
<generator1_type> <generator2_type> <generator3_type> <generator4_type> <effects1_array> <effects2_array> <effects3_array> <effects4_array>

generator#_type: A one-byte indicator of the type of generator.
effects#_array: A series of 4 bytes storing the types of effects, in order.

~~~~~~~~~~~~~~~~~

Channel arguents section:

This is an array of argument fields (read: NOT A BYTE ARRAY). These will be passed via ctrl() to each Channel element.
The array does not store its own size, but is terminated by a special element.

Format:
<element> <setting> <type_field> <data>

element: A byte.
    The first nibble stores the number of the channel (1-4, NOT 0-3).
    The second nibble stores the element number (0 = generator, 1-4 = effects).

setting: A two-byte field storing the number of the setting.

type_field: A type field storing the type of the data to be read.

data: The "meat" of the preset.


This array is terminated when it reaches an incomplete argument field with an element value of 0.

~~~~~~~~~~~~~~~~~
